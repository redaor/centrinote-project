#!/bin/bash

echo "üîß Configuration ngrok v3 avec domaine r√©serv√©"
echo "=============================================="
echo ""

# V√©rifier ngrok
if ! command -v ngrok &> /dev/null; then
    echo "‚ùå ngrok non install√©. Ex√©cutez: brew install ngrok"
    exit 1
fi

# V√©rifier la version
NGROK_VERSION=$(ngrok version | head -1 | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
echo "üìã Version ngrok d√©tect√©e: $NGROK_VERSION"

# V√©rifier l'authentification
if ! ngrok config check &> /dev/null; then
    echo "‚ùå Token ngrok manquant"
    echo "üîë 1. Allez sur: https://dashboard.ngrok.com/get-started/your-authtoken"
    echo "üîë 2. Copiez votre token"
    echo "üîë 3. Ex√©cutez: ngrok authtoken VOTRE_TOKEN"
    exit 1
fi

echo "‚úÖ ngrok authentifi√©"
echo ""

# Proposer deux options
echo "üéØ Options de configuration pour ngrok v3:"
echo ""
echo "Option 1: üÜì Domaine r√©serv√© gratuit (RECOMMAND√â)"
echo "   - R√©servez un domaine gratuit sur ngrok dashboard"
echo "   - URL fixe pour toujours"
echo ""
echo "Option 2: üîÑ URLs dynamiques avec mise √† jour auto"
echo "   - Utilise les scripts de mise √† jour automatique"
echo "   - Fonctionne imm√©diatement"
echo ""

read -p "Choisissez (1 pour domaine r√©serv√©, 2 pour dynamique): " choice

case $choice in
    1)
        echo ""
        echo "üåê Configuration domaine r√©serv√© ngrok"
        echo "======================================"
        echo ""
        echo "üìã √âtapes pour r√©server un domaine gratuit:"
        echo "1. üîó Allez sur: https://dashboard.ngrok.com/cloud-edge/domains"
        echo "2. üÜï Cliquez 'Create Domain' ou 'New Domain'"
        echo "3. üìù Choisissez un nom (ex: centrinote-reda-dev)"
        echo "4. üíæ Sauvegardez le domaine"
        echo ""
        
        read -p "Avez-vous d√©j√† r√©serv√© un domaine ? (y/n): " has_domain
        
        if [[ $has_domain =~ ^[Yy]$ ]]; then
            read -p "üîó Entrez votre domaine r√©serv√© (ex: centrinote-reda-dev.ngrok-free.app): " reserved_domain
            
            # Cr√©er ngrok.yml avec domaine r√©serv√©
            cat > ngrok.yml << EOF
version: 2
tunnels:
  backend:
    addr: 5174
    proto: http
    domain: $reserved_domain
EOF
            
            echo "‚úÖ Configuration cr√©√©e avec domaine r√©serv√©: $reserved_domain"
            
            # Mettre √† jour les .env avec le domaine r√©serv√©
            echo "üîÑ Mise √† jour des fichiers .env..."
            
            # Mise √† jour .env principal
            sed -i.bak "s|VITE_ZOOM_REDIRECT_URI=.*|VITE_ZOOM_REDIRECT_URI=https://${reserved_domain}/auth/callback|g" .env
            sed -i.bak "s|APP_PUBLIC_URL=.*|APP_PUBLIC_URL=https://${reserved_domain}|g" .env
            sed -i.bak "s|ZOOM_REDIRECT_URI=.*|ZOOM_REDIRECT_URI=https://${reserved_domain}/auth/callback|g" .env
            sed -i.bak "s|CLIENT_URL=.*|CLIENT_URL=https://${reserved_domain}|g" .env
            sed -i.bak "s|VITE_BACKEND_URL=.*|VITE_BACKEND_URL=https://${reserved_domain}|g" .env
            
            # Mise √† jour server/.env
            sed -i.bak "s|ZOOM_REDIRECT_URI=.*|ZOOM_REDIRECT_URI=https://${reserved_domain}/auth/callback|g" server/.env
            sed -i.bak "s|CLIENT_URL=.*|CLIENT_URL=https://${reserved_domain}|g" server/.env
            sed -i.bak "s|APP_PUBLIC_URL=.*|APP_PUBLIC_URL=https://${reserved_domain}|g" server/.env
            
            # Nettoyer fichiers backup
            rm .env.bak server/.env.bak 2>/dev/null
            
            echo "‚úÖ Fichiers .env mis √† jour avec: https://${reserved_domain}"
            echo ""
            echo "üéØ VOTRE URL FIXE PERMANENTE:"
            echo "   https://${reserved_domain}"
            echo ""
            echo "üìã Configuration Zoom Marketplace:"
            echo "   https://${reserved_domain}/auth/callback"
            echo ""
            echo "üöÄ Pour d√©marrer:"
            echo "   ngrok start --all --config=ngrok.yml"
            
        else
            echo ""
            echo "üîó Ouvrez le dashboard ngrok pour r√©server un domaine:"
            open "https://dashboard.ngrok.com/cloud-edge/domains" 2>/dev/null || echo "https://dashboard.ngrok.com/cloud-edge/domains"
            echo ""
            echo "Une fois le domaine r√©serv√©, relancez ce script !"
        fi
        ;;
    2)
        echo ""
        echo "üîÑ Configuration URLs dynamiques"
        echo "================================"
        echo ""
        echo "‚úÖ Utilisation du syst√®me de mise √† jour automatique"
        echo "üìã Workflow:"
        echo "   1. D√©marrez ngrok: ngrok start --all --config=ngrok.yml"
        echo "   2. R√©cup√©rez la nouvelle URL"
        echo "   3. Ex√©cutez: ./update-ngrok-url.sh"
        echo ""
        echo "üéØ Configuration ngrok.yml cr√©√©e pour mode dynamique"
        ;;
    *)
        echo "‚ùå Choix invalide"
        exit 1
        ;;
esac

echo ""
echo "‚úÖ Configuration termin√©e !"